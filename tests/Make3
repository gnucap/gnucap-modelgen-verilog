# tests Make3
#
ENV = GNUCAP_PLUGPATH=${top_builddir}:$(plugpath) top_srcdir=${top_srcdir} srcdir=${srcdir}

glob_dump = $(shell cd ${srcdir}; ls dump*.vams)
glob_pp = $(shell cd ${srcdir}; ls *.vapp)
glob_v = $(shell cd ${srcdir}; ls v*.gc)
glob_mg = $(shell cd ${srcdir}; ls mg*.gc)
glob_sh = $(shell cd ${srcdir}; ls *.sh)

filt_dump = $(filter ${TESTCASES}%, ${glob_dump})
filt_pp   = $(filter ${TESTCASES}%, ${glob_pp})
filt_v    = $(filter ${TESTCASES}%, ${glob_v})
filt_mg   = $(filter ${TESTCASES}%, ${glob_mg})
filt_sh   = $(filter ${TESTCASES}%, ${glob_sh})

dump_out = ${filt_dump:%=${TARGETDIR}/%.out}
dump_diff = ${filt_dump:%=${TARGETDIR}/%.diff}

pp_out = ${filt_pp:%=${TARGETDIR}/%.out}
pp_diff = ${filt_pp:%=${TARGETDIR}/%.diff}

v_out = ${filt_v:%=${TARGETDIR}/%.out}
mg_out = ${filt_mg:%=${TARGETDIR}/%.out}

gc_out = ${v_out} ${mg_out}
gc_diff = ${gc_out:%.out=%.diff}

sh_out = ${filt_sh:%=${TARGETDIR}/%.out}
sh_diff = ${filt_sh:%=${TARGETDIR}/%.diff}

diff = ${dump_diff} ${gc_diff} ${pp_diff} ${sh_diff}

# TODO: maybe cat the diff, so it can be logged?
check: ${TARGETDIR}/${TESTCASES}.diff
	@find ${TARGETDIR} -size 0 -delete;
	@echo ==
	@if [ -s ${TARGETDIR}/${TESTCASES}.diff ]; then \
		echo test failures:; \
		ls -larS ${TARGETDIR}/${TESTCASES}*.diff; \
	else \
		echo all ${TESTCASES} passed; \
	fi

${TARGETDIR}/${TESTCASES}.diff : ${diff}
	@cat $+ > $@

${gc_out}: ${TEST_PLUGINS} ${SYMLINKS}

# this is a hack: link *.o
modelgen_0.so: modelgen_0.cc ../src/gnucap-mg-vams
	${CXX} -shared -fPIC ${GNUCAP_CPPFLAGS} ${CPPFLAGS} ${MAKE_CPPFLAGS} ${GNUCAP_CXXFLAGS} ${CXXFLAGS} $< ../src/*.o -o $@ # makefile.in
modelgen_1.so: modelgen_1.cc ../src/gnucap-mg-vams
	${CXX} -shared -fPIC ${GNUCAP_CPPFLAGS} ${CPPFLAGS} ${MAKE_CPPFLAGS} ${GNUCAP_CXXFLAGS} ${CXXFLAGS} $< ../src/*.o -o $@ # makefile.in

${diff}: ${TARGETDIR}/%.diff: ${TARGETDIR}/%.out
	@if [ ! -f ${ref}/$*.out ]; then \
	  echo MISS: $*; \
	  echo "missing: $*.out" > $@; \
	elif ${DIFF} ${ref}/$*.out ${TARGETDIR}/$*.out > $@; then \
	  echo pass: $*; \
	else \
	  echo FAIL: $*; \
	fi

# makefile: makefile.in
# 	source config.log
#
prep: ${SYMLINKS}
	# @[ ! -s "${TARGETDIR}" ]
	-mkdir -p ${TARGETDIR}

${v_out}: ${TARGETDIR}/v%.gc.out: prep
	-@${ENV} ${GNUCAP} ${GNUCAP_ARGS} ${srcdir}/v$*.gc |tail -n +12 | \
		grep -v '^stashing\ as' | grep -v 'already\ installed' | grep -v ^make > $@

${mg_out}: ${TARGETDIR}/mg%.gc.out: prep
	-@${ENV} ${GNUCAP} ${GNUCAP_ARGS} ${MG_ARGS} ${srcdir}/mg$*.gc |tail -n +12 | \
		grep -v '^stashing\ as' | grep -v 'already\ installed' | grep -v ^make > $@

${pp_out}: ${TARGETDIR}/%.vapp.out: prep
	@[ x${srcdir} = x. ] || ln -sf ${srcdir}/$*.vapp;
	@${ENV} ${MODELGEN} -d ${TARGETDIR}/$*.err -I${srcdir} -D__VAMS_GNUCAP --pp $*.vapp | cat > $@
	@[ x${srcdir} = x. ] || rm $*.vapp;
	@cat ${TARGETDIR}/$*.err >> $@
	@rm ${TARGETDIR}/$*.err

${dump_out}: ${TARGETDIR}/%.vams.out: prep
	@[ x${srcdir} = x. ] || ln -sf ${srcdir}/$*.vams;
	@${ENV} ${MODELGEN} -d ${TARGETDIR}/$*.err -I${top_srcdir}/vams --dump $*.vams | cat > $@
	@[ x${srcdir} = x. ] || rm $*.vams;
	@cat ${TARGETDIR}/$*.err >> $@
	@rm ${TARGETDIR}/$*.err

${sh_out}: ${TARGETDIR}/%.sh.out: prep
	-@${ENV} ${srcdir}/$*.sh ${MODELGEN} > $@

${PWD}/disciplines.vams:
	-${LN_S} ${top_srcdir}/vams/disciplines.vams
${PWD}/constants.vams:
	-${LN_S} ${top_srcdir}/vams/constants.vams
${PWD}/sub:
	-${LN_S} ${srcdir}/sub
